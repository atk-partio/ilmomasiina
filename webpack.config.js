/**
 * @see http://webpack.github.io/docs/configuration.html
 * for webpack configuration options
 */
var path = require('path');
var railsRoot = path.join(__dirname);
var railsAssetsDir = path.join(railsRoot, 'app', 'assets');
var railsJsDir = path.join(railsAssetsDir, 'javascripts');

var NODE_ENV =
  process.env.NODE_ENV ||
  process.env.RAILS_ENV ||
  process.env.RACK_ENV ||
  'development';

// 'context' sets the directory where webpack looks for module files you list
// in your 'require' statements
var context = railsJsDir;

// 'entry' specifies the entry point, where webpack starts reading all
// dependencies listed and bundling them into the output file.
var entry = {
  main: 'main_entry_point.js',
};

// 'output' specifies the filepath for saving the bundled output
// generated by webpack.
var output = {
  filename: '[name].js',
  path: path.join(railsJsDir, 'bundle'),
};

// External dependencies which are already available in the global scope
var externals = {
};

// @see http://webpack.github.io/docs/using-loaders.html
var moduleLoaders = [
  { test: /\.js$/, exclude: /node_modules\//, loaders: ['6to5'] },
  { test: /\.jsx$/, exclude: /node_modules\//, loaders: ['6to5'] },
];

// Webpack module configuration
var webpModule = {
  loaders: moduleLoaders
};

// Settings related to resolving require()-statement files
var resolve = {
  root: railsJsDir,
  // @see http://webpack.github.io/docs/configuration.html#resolve-extensions
  extensions: ['', '.js', '.jsx'],
};

// Plugins for Webpack
// http://webpack.github.io/docs/using-plugins.html
var plugins = [
];

module.exports = {
  context: context,
  entry: entry,
  output: output,
  externals: externals,
  module: webpModule,
  resolve: resolve,
  plugins: plugins,
};
